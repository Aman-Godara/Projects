let rec rev1 l pt  = match l with 

| ab::cd ::[] -> cd::ab::pt

|hd :: tl:: rest ->  rev1 (rest) (tl :: hd :: pt)

|nr ::[] -> nr :: pt  

|[] -> [] ;;



let rev l = rev1 l [] ;;




let rec map l f = match l with 

|[] -> [] 

| hd :: tl -> (f (hd)) :: map (tl) f  ;;








let rev_map l = (map (rev l) f) ;; 
