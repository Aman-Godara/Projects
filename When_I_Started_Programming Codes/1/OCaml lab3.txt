        OCaml version 4.02.3

# 2.3 +. 3.4 ;;
- : float = 5.6999999999999993
# 2.5 +. 3.9 ;;
- : float = 6.4
# let x y = ( x== 2 ) ;;
Characters 12-13:
  let x y = ( x== 2 ) ;;
              ^
Error: Unbound value x
# let first x =  let char = x mod 4 in let var = x mod 100 in let gar = x mod 400 if (gar = 0) then false else if ;;
Characters 80-82:
  let first x =  let char = x mod 4 in let var = x mod 100 in let gar = x mod 400 if (gar = 0) then false else if ;;
                                                                                  ^^
Error: Syntax error




# let first x = let far  = x mod 100 in  if (far = 0) then true else false ;;
val first : int -> bool = <fun>



# let second x = if (first x = true ) then false else if first x = false then true else true  ;;
val second : int -> bool = <fun>


# let second x = if (first x = true ) then -1 else if (first x = false ) then x mod 4   else -1 ;;
val second : int -> int = <fun>



# let third x = if (x mod 400 = 0) then false else if  (second x = 0) then true else false ;;
val third : int -> bool = <fun>


# let leapyear x = if ( x mod 4 =0 && x mod 100 != 0 ) then true else if x mod 400 =0 then true else false ;;
val leapyear : int -> bool = <fun>



# let func1 x  y z = x+y+z - max ( x) (max (y) (z) ) - min (x) (min(y) (z)) ;;
val func1 : int -> int -> int -> int = <fun>
# func1 2 3 4 ;;
- : int = 3
# func1 5 2 13 ;;
- : int = 5
# func1 5 5 12 ;;
- : int = 5
# let func1 x y z  = if x=y ||y=z ||x=z then -1 else ( x+y+z - max(x) (max (y) (z) ) - min (x) (min(y) (z)) ) ;;
val func1 : int -> int -> int -> int = <fun>
# func1 5 5 12 ;;
- : int = -1
# let func1 x y z  = if  x=y && y=z then -2 else if x=y ||y=z ||x=z then -1 else ( x+y+z - max(x) (max (y) (z) ) - min (x) (min(y) (z)) ) ;;
val func1 : int -> int -> int -> int = <fun>
# func1 55 55 12 ;;
- : int = -1
# func1 5 5 5;;
- : int = -2
#